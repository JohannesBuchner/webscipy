{"google":"","body":"WebSciPy allows you to make interactive web demos of scientific problems by \r\nconnecting your scipy/numpy code and matplotlib plots with user-friendly, \r\ninteractive web forms. Check it out!\r\n\r\n\r\n## Trying WebSciPy\r\n\r\nDownload the code and run::\r\n\r\n```bash\r\n$ python test.py\r\nhttp://0.0.0.0:8080/\r\n```\r\n\r\nThis should tell you the website to visit. Try the FFT and square root demo programs:\r\n\r\n![FFT](https://raw.github.com/JohannesBuchner/webscipy/master/sinexample.png)\r\n\r\nThe FFT demo program features interactive sliders and plotting capabilities.\r\n\r\n## Hacking WebSciPy\r\n\r\nDownload and fork this project on github. Put your own demo cases in your repo!\r\n\r\nOpen test.py. You find the routes that connect URLs with classes.\r\nThe sqrt class shows the minimal use case of connecting a input form to some calculations.\r\nYou will write a similar class for your code, then connect it in the routes.\r\n\r\nA more elaborate example, with scipy libraries and matplotlib plotting is the sin class.\r\n\r\nWebSciPy is built on web.py, so look at [their documentation](http://webpy.org/). And of course, some knowledge of HTML, CSS, and Javascript (JQuery) is useful.\r\n\r\nIn WebSciPy you can use all the python libraries installed on your machine.\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Interactive web pages  for scientific computing with python","name":"Webscipy"}